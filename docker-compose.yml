services:
  app:
    build: .
    container_name: delivery_service
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "alembic upgrade head && python main.py"
    networks:
      - delivery_network

  tests:
    build:
      context: .
    container_name: delivery_tests
    environment:
      TEST_DATABASE_NAME: test_delivery_service
      TESTING: "True"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - delivery_network
    volumes:
      - .:/app
    command: >
      sh -c "pytest -v tests/ --asyncio-mode=auto --cov=. --cov-report=term-missing"

  mysql:
    image: mysql:9.3.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: delivery_service
    ports:
      - "3307:3306"
      - "33070:33060"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$DATABASE_PASSWORD" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - delivery_network
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - delivery_network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  delivery_network:
    driver: bridge